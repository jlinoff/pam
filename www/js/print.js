// Print the records in plaintext top
/**
 * Print records in plaintext to allow users to store them
 * locally. This is not secure but it allows users to keep a hard
 * copy.
 */
import { xmk, xget, xgetn, enableFunctionChaining } from './lib.js'
import { statusBlip } from './status.js'
import { VERSION } from './version.js'  // automatically generated by make

export function enablePrinting() {
    let eps = document.body.xGetN('.x-print')
    for (let ep of eps) {
        if ( window.prefs.enablePrinting ) {
            ep.xStyle({'display': 'block'})
        } else {
            ep.xStyle({'display': 'none'})
        }
    }
}

export function printRecords() {
    statusBlip(`generating print document...`)
    let doc = genRecordsDocument()
    let pwin = window.open("")
    pwin.document.write(doc)
    pwin.print()
    pwin.close()
}

function genRecordsDocument() {
    let recordsContainer = document.body.xGet('#records-accordion') // middle part of the document.
    let accordionItems = recordsContainer.xGetN('.accordion-item')
    let doc = '<pre>'
    for (let i=0; i<accordionItems.length; i++) {
        let accordionItem = accordionItems[i]
        let button = accordionItem.xGet('.accordion-button')
        let title = button.innerHTML
        let j = i+1
        let index = j.toString().padStart(3, '0')
        doc += `<br><b>Record: ${index} ${title}</b>`
        let rows = accordionItem.xGetN('.row')
        for (let i=0; i<rows.length; i++) {
            let row = rows[i]
            let nameDiv = row.xGet('.x-fld-name')
            if (!nameDiv) {
                continue // button row
            }
            let name = nameDiv.innerHTML
            let valueDiv = row.xGet('.x-fld-value')
            let type = valueDiv.getAttribute('data-fld-type')
            let value = valueDiv.innerHTML
            switch( type ) {
            case 'html':
            case 'password':
            case 'textarea':
            case 'url':
                value = valueDiv.getAttribute('data-fld-raw-value')
                break
            default:
                break
            }
            let rec = `<br>   ${name} : `
            if (type !== 'textarea') {
                rec += value
            } else {
                let indent = '      '
                rec += value.length + '<br>' + indent
                for(let ch of value) {
                    rec += ch
                    if (ch === '\n') {
                        rec += indent
                    }
                }
            }
            doc += rec
        }
    }
    doc += '</pre>'
    return doc
}
