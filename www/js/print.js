// Print the records in plaintext top
/**
 * Print records in plaintext to allow users to store them
 * locally. This is not secure but it allows users to keep a hard
 * copy.
 */
import { statusBlip } from './status.js'
import { VERSION } from './version.js'  // automatically generated by make

export function printRecords(event) {
    if (! window.prefs.enablePrinting) {
        return
    }
    if (event.isComposing || event.keyCode === 229) {
        return;
    }
    if (event.ctrlKey && event.code === 'KeyP') {
        if (!window.confirm("Do you really want to print your password information?\nThis can be a security risk.")) {
            return
        }
        var pwin = window.open("")
        statusBlip(`generating print document...`)
        let doc = gendoc()
        pwin.document.write(doc)
        pwin.print()
        pwin.close()
    }
}

function gendoc() {
    // Generate the records document.
    let recordsContainer = document.body.xGet('#records-accordion') // middle part of the document.
    let accordionItems = recordsContainer.xGetN('.accordion-item')
    let doc = '<pre>'
    for (let i=0; i<accordionItems.length; i++) {
        let accordionItem = accordionItems[i]
        let button = accordionItem.xGet('.accordion-button')
        let title = button.innerHTML
        doc += `<br><b>Record: ${title}</b>`
        let rows = accordionItem.xGetN('.row')
        for (let i=0; i<rows.length; i++) {
            let row = rows[i]
            let nameDiv = row.xGet('.x-fld-name')
            if (!nameDiv) {
                continue // button row
            }
            let name = nameDiv.innerHTML
            let valueDiv = row.xGet('.x-fld-value')
            let type = valueDiv.getAttribute('data-fld-type')
            let value = valueDiv.innerHTML
            switch( type ) {
            case 'html':
            case 'password':
            case 'textarea':
            case 'url':
                value = valueDiv.getAttribute('data-fld-raw-value')
                break
            default:
                break
            }
            let rec = `<br>   ${name} : `
            if (type !== 'textarea') {
                rec += value
            } else {
                rec += value.length
                rec += `<br>---<br>${value}<br>---`
            }
            doc += rec
        }
    }
    doc += '</pre>'
    return doc
}
